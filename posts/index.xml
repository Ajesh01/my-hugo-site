<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Terminal</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Jun 2021 20:23:10 +0530</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS Stuff</title>
      <link>/posts/notes/amazon-sagemaker/</link>
      <pubDate>Sun, 13 Jun 2021 20:23:10 +0530</pubDate>
      
      <guid>/posts/notes/amazon-sagemaker/</guid>
      <description>Amazon SageMaker What is it? Amazon SageMaker is a fully managed service that provides every developer and data scientist with the ability to build, train, and deploy machine learning (ML) models quickly in the Amazon Web Services (AWS) public cloud.
Where it can be used? Amazon SageMaker reduces the complexity of taking ML models from conceptualization to production by making it much easier to build and deploy ML models. After you choose the right algorithms and frameworks from the wide range of choices available, SageMaker manages all of the underlying infrastructure to train your model at petabyte scale, and deploy it to production.</description>
      <content>&lt;h1 id=&#34;amazon-sagemaker&#34;&gt;Amazon SageMaker&lt;/h1&gt;
&lt;h2 id=&#34;what-is-it&#34;&gt;What is it?&lt;/h2&gt;
&lt;p&gt;Amazon SageMaker is a fully managed service that provides every developer and data scientist with the ability to build, train, and deploy machine learning (ML) models quickly in the Amazon Web Services (AWS) public cloud.&lt;/p&gt;
&lt;h2 id=&#34;where-it-can-be-used&#34;&gt;Where it can be used?&lt;/h2&gt;
&lt;p&gt;Amazon SageMaker reduces the complexity of taking ML models from conceptualization to production by making it much easier to build and deploy ML models. After you choose the right algorithms and frameworks from the wide range of choices available, SageMaker manages all of the underlying infrastructure to train your model at petabyte scale, and deploy it to production.&lt;/p&gt;
&lt;h2 id=&#34;pros&#34;&gt;Pros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Provided an instance of Jupyter notebook for development script, which made it very easy to manage and develop any script.&lt;/li&gt;
&lt;li&gt;Our system is cloud-based, and we are charged only for what we use and how long we use it.&lt;/li&gt;
&lt;li&gt;We can choose multiple servers for Training, without any headache of distribution.&lt;/li&gt;
&lt;li&gt;Most of the libraries are supported.&lt;/li&gt;
&lt;li&gt;All training, testing, and models are stored on S3, so it&amp;rsquo;s very easy to access whenever we require it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cons&#34;&gt;Cons&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s very good for the hardcore programmer, but a little bit complex for a data scientist or new hire who does not have a strong programming background.&lt;/li&gt;
&lt;li&gt;Most of the popular library and ML frameworks are there, but we still have to depend on them for new releases.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;amazon-codeguru&#34;&gt;Amazon CodeGuru&lt;/h1&gt;
&lt;h2 id=&#34;what-is-it-1&#34;&gt;What is it?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Amazon CodeGuru is a developer tool that provides intelligent recommendations to improve code quality and identify an application’s most expensive lines of code.&lt;/li&gt;
&lt;li&gt;CodeGuru Reviewer uses machine learning and automated reasoning to identify critical issues, security vulnerabilities, and hard-to-find bugs during application development and provides recommendations to improve code quality.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;where-it-can-be-used-1&#34;&gt;Where it can be used?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Find the most expensive lines of code then get recommendations to fix or improve your code.&lt;/li&gt;
&lt;li&gt;Find and fix code issues such as resource leaks, potential concurrency race conditions, and wasted CPU cycles.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pros-1&#34;&gt;Pros&lt;/h2&gt;
&lt;h2 id=&#34;cons-1&#34;&gt;Cons&lt;/h2&gt;
&lt;h1 id=&#34;amazon-devops-guru&#34;&gt;Amazon DevOps Guru&lt;/h1&gt;
&lt;h2 id=&#34;what-is-it-2&#34;&gt;What is it?&lt;/h2&gt;
&lt;p&gt;DevOps Guru is a fully-managed service that is trained to analyze logs, metrics, and events across 25 AWS resources. The service looks for behavior that deviates from patterns established by history extracted from Amazon and AWS.&lt;/p&gt;
&lt;h2 id=&#34;where-it-can-be-used-2&#34;&gt;Where it can be used?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Users configure DevOps Guru with a list of resources to monitor. The service alerts users about problems and potential issues when it identifies anomalous situations, such as code releases that lead to abnormal behavior or resource utilization patterns that may lead to depletion.&lt;/li&gt;
&lt;li&gt;DevOps Guru delivers insights that include details about the impact of problems, as well as how to remediate them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pros-2&#34;&gt;Pros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;List itemAutomatically detect operational issues&lt;/li&gt;
&lt;li&gt;Resolve issues quickly with ML-powered insights&lt;/li&gt;
&lt;li&gt;Easily scale and maintain availability&lt;/li&gt;
&lt;li&gt;Reduce noise and alarm fatigue&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cons-2&#34;&gt;Cons&lt;/h2&gt;
&lt;h1 id=&#34;amazon-comprehend&#34;&gt;Amazon Comprehend&lt;/h1&gt;
&lt;h2 id=&#34;what-is-it-3&#34;&gt;What is it?&lt;/h2&gt;
&lt;p&gt;Amazon Comprehend is a natural language processing (NLP) service that uses machine learning to find insights and relationships in text.&lt;/p&gt;
&lt;h2 id=&#34;where-it-can-be-used-3&#34;&gt;Where it can be used?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;helps you uncover the insights and relationships in your unstructured data.&lt;/li&gt;
&lt;li&gt;Can be used for Keyphrase Extraction, Sentiment Analysis, Syntax Analysis ,Entity Recognition , Custom Entities, Language Detection, Custom Classification, Topic Modeling, Multiple Language Support, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pros-3&#34;&gt;Pros&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s AWS, you may be already be running workloads there.&lt;/li&gt;
&lt;li&gt;Intergrates with other AWS services&lt;/li&gt;
&lt;li&gt;Huge corpus to learn from&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cons-3&#34;&gt;Cons&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Platform lock in&lt;/li&gt;
&lt;li&gt;Relatively new as a standalone service&lt;/li&gt;
&lt;li&gt;No option to train your own model ( but can with SageMaker )&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Second Post</title>
      <link>/posts/markdown-sample/</link>
      <pubDate>Sun, 13 Jun 2021 20:23:10 +0530</pubDate>
      
      <guid>/posts/markdown-sample/</guid>
      <description>An h1 header Paragraphs are separated by a blank line.
2nd paragraph. Italic, bold, and monospace. Itemized lists look like:
 this one that one the other one  Note that &amp;mdash; not considering the asterisk &amp;mdash; the actual text content starts at 4-columns in.
 Block quotes are written like so.
They can span multiple paragraphs, if you like.
 Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex.</description>
      <content>&lt;h1 id=&#34;an-h1-header&#34;&gt;An h1 header&lt;/h1&gt;
&lt;p&gt;Paragraphs are separated by a blank line.&lt;/p&gt;
&lt;p&gt;2nd paragraph. &lt;em&gt;Italic&lt;/em&gt;, &lt;strong&gt;bold&lt;/strong&gt;, and &lt;code&gt;monospace&lt;/code&gt;. Itemized lists
look like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;this one&lt;/li&gt;
&lt;li&gt;that one&lt;/li&gt;
&lt;li&gt;the other one&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that &amp;mdash; not considering the asterisk &amp;mdash; the actual text
content starts at 4-columns in.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Block quotes are
written like so.&lt;/p&gt;
&lt;p&gt;They can span multiple paragraphs,
if you like.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., &amp;ldquo;it&amp;rsquo;s all
in chapters 12&amp;ndash;14&amp;rdquo;). Three dots &amp;hellip; will be converted to an ellipsis.
Unicode is supported. ☺&lt;/p&gt;
&lt;h2 id=&#34;an-h2-header&#34;&gt;An h2 header&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s a numbered list:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;first item&lt;/li&gt;
&lt;li&gt;second item&lt;/li&gt;
&lt;li&gt;third item&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note again how the actual text starts at 4 columns in (4 characters
from the left side). Here&amp;rsquo;s a code sample:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Let me re-iterate ...
for i in 1 .. 10 { do-something(i) }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you probably guessed, indented 4 spaces. By the way, instead of
indenting the block, you can use delimited blocks, if you like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;define foobar() {
    print &amp;quot;Welcome to flavor country!&amp;quot;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(which makes copying &amp;amp; pasting easier). You can optionally mark the
delimited block for Pandoc to syntax highlight it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time
&lt;span style=&#34;color:#75715e&#34;&gt;# Quick, count to ten!&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;):
    &lt;span style=&#34;color:#75715e&#34;&gt;# (but not *too* quick)&lt;/span&gt;
    time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; i
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;an-h3-header&#34;&gt;An h3 header&lt;/h3&gt;
&lt;p&gt;Now a nested list:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;First, get these ingredients:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;carrots&lt;/li&gt;
&lt;li&gt;celery&lt;/li&gt;
&lt;li&gt;lentils&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Boil some water.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dump everything in the pot and follow
this algorithm:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;find wooden spoon
uncover pot
stir
cover pot
balance wooden spoon precariously on pot handle
wait 10 minutes
goto first step (or shut off burner when done)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Do not bump wooden spoon or it will fall.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Notice again how text always lines up on 4-space indents (including
that last line which continues item 3 above).&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a link to &lt;a href=&#34;http://foo.bar&#34;&gt;a website&lt;/a&gt;, to a &lt;a href=&#34;local-doc.html&#34;&gt;local
doc&lt;/a&gt;, and to a &lt;a href=&#34;#an-h2-header&#34;&gt;section heading in the current
doc&lt;/a&gt;. Here&amp;rsquo;s a footnote &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Tables can look like this:&lt;/p&gt;
&lt;p&gt;size  material      color&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;9     leather       brown
10    hemp canvas   natural
11    glass         transparent&lt;/p&gt;
&lt;p&gt;Table: Shoes, their sizes, and what they&amp;rsquo;re made of&lt;/p&gt;
&lt;p&gt;(The above is the caption for the table.) Pandoc also supports
multi-line tables:&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;keyword   text&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;red       Sunsets, apples, and
other red or reddish
things.&lt;/p&gt;
&lt;p&gt;green     Leaves, grass, frogs
and other things it&amp;rsquo;s
not easy being.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A horizontal rule follows.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Here&amp;rsquo;s a definition list:&lt;/p&gt;
&lt;p&gt;apples
: Good for making applesauce.
oranges
: Citrus!
tomatoes
: There&amp;rsquo;s no &amp;ldquo;e&amp;rdquo; in tomatoe.&lt;/p&gt;
&lt;p&gt;Again, text is indented 4 spaces. (Put a blank line between each
term/definition pair to spread things out more.)&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a &amp;ldquo;line block&amp;rdquo;:&lt;/p&gt;
&lt;p&gt;| Line one
|   Line too
| Line tree&lt;/p&gt;
&lt;p&gt;and images can be specified like so:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;example-image.jpg&#34; alt=&#34;example image&#34; title=&#34;An exemplary image&#34;&gt;&lt;/p&gt;
&lt;p&gt;Inline math equations go in like so: $\omega = d\phi / dt$. Display
math should get its own line and be put in in double-dollarsigns:&lt;/p&gt;
&lt;p&gt;$$I = \int \rho R^{2} dV$$&lt;/p&gt;
&lt;p&gt;And note that you can backslash-escape any punctuation characters
which you wish to be displayed literally, ex.: `foo`, *bar*, etc.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Footnote text goes here.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
    </item>
    
  </channel>
</rss>
